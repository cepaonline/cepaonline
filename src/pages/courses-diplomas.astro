---
// Import section components
import PrimaryCTA from "@/components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "@/components/ui/buttons/SecondaryCTA.astro";
import TextInput from "@/components/ui/forms/input/TextInput.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import { SITE } from "@data/constants";

const pageTitle: string = `Cursos y Diplomados​ | ${SITE.title}`;
const title: string = `Cursos y Diplomados`;
---

<MainLayout title={pageTitle}>
    <div class="min-h-[70vh]">
        <section
            class="mx-auto max-w-[85rem] items-center px-4 py-10 text-center sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
        >
            <div class="mt-10 flex flex-col items-center md:mt-20">
                <!-- Section title -->
                <h1
                    class="mb-4 text-balance text-4xl font-extrabold tracking-tight text-neutral-700 dark:text-neutral-200"
                >
                    {title}
                </h1>
                <!-- Section subtitle -->
                <p
                    class="mb-8 max-w-prose text-pretty font-light text-neutral-600 dark:text-neutral-400 sm:text-xl"
                >
                    Verifica la autenticidad del certificado emitido por el
                    Centro de Estudios Psicométricos y del Aprendizaje SpA
                    buscando los últimos cuatro dígitos del número de identidad
                    del profesional o estudiante.
                </p>
            </div>

            <div>
                <form id="form-search" class="mx-auto max-w-sm">
                    <div class="flex items-center">
                        <label for="search-code" class="sr-only">Buscar</label>
                        <div class="relative w-full">
                            <div
                                class="pointer-events-none absolute inset-y-0 start-0 flex items-center ps-3"
                            >
                                <svg
                                    class="h-4 w-4 text-gray-500 dark:text-gray-400"
                                    aria-hidden="true"
                                    xmlns="http://www.w3.org/2000/svg"
                                    fill="none"
                                    viewBox="0 0 18 20"
                                >
                                    <path
                                        stroke="currentColor"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M3 5v10M3 5a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm0 10a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm12 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm0 0V6a3 3 0 0 0-3-3H9m1.5-2-2 2 2 2"
                                    ></path>
                                </svg>
                            </div>
                            <input
                                type="text"
                                id="search-code"
                                class="dark:focus:ring-blue-500 dark:focus:border-blue-500 block w-full rounded-lg border border-gray-300 bg-gray-50 p-3 ps-10 text-sm text-gray-900 focus:border-primary-500 focus:ring-primary-500 dark:border-gray-600 dark:bg-gray-500 dark:text-white dark:placeholder-gray-400"
                                placeholder="xxx-x"
                                maxlength="5"
                                required
                            />
                        </div>
                        <button
                            type="submit"
                            class="border-blue-500 focus:ring-blue-300 dark:focus:ring-blue-700 ms-2 rounded-lg border bg-primary-500 p-3 text-sm font-medium text-white hover:bg-primary-400 focus:outline-none focus:ring-4 dark:bg-primary-600 dark:hover:bg-primary-500"
                        >
                            <svg
                                class="h-4 w-4"
                                aria-hidden="true"
                                xmlns="http://www.w3.org/2000/svg"
                                fill="none"
                                viewBox="0 0 20 20"
                            >
                                <path
                                    stroke="currentColor"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"
                                ></path>
                            </svg>
                            <span class="sr-only">Buscar</span>
                        </button>
                    </div>
                    <span id="error-label" class="text-xs text-red-600"></span>
                </form>
            </div>

            <div class="mt-8 flex flex-col">
                <small class="text-neutral-600"
                    >Si tienes problemas, por favor <a
                        href="/contact"
                        class="text-primary-500">Contáctanos</a
                    ></small
                >
                <small class="text-neutral-600"
                    >El código debe ser 3 digitos seguidos y el último número
                    separado por un guión: xxx-x</small
                >
            </div>
        </section>
        <section
            id="code-success"
            class="mb-20 mt-5 hidden opacity-0 transition-all delay-150 duration-300 ease-in-out"
        >
            <div class="flex flex-col items-center">
                <!-- Section title -->
                <h3
                    id="code"
                    class="mb-4 text-balance text-4xl font-extrabold tracking-tight text-primary-700 dark:text-neutral-200"
                >
                    xxx-x
                </h3>
                <h4
                    id="course"
                    class="mb-4 text-balance text-center text-4xl font-extrabold tracking-tight text-neutral-700 dark:text-neutral-200"
                >
                    ---
                </h4>
                <!-- Section subtitle -->
                <p
                    class="mb-8 max-w-prose text-pretty font-light text-neutral-600 dark:text-neutral-400 sm:text-xl"
                >
                    Este código está validado por CEPA y confirmamos su valides
                </p>
            </div>
        </section>
        <section
            id="not-found"
            class="mb-20 mt-5 hidden opacity-0 transition-all delay-150 duration-300 ease-in-out"
        >
            <div class="flex flex-col items-center justify-center">
                <!-- Section title -->
                <h3
                    id="code"
                    class="mb-4 text-balance text-4xl font-extrabold tracking-tight text-red-500 dark:text-neutral-200"
                >
                    xxx-x
                </h3>
                <h4
                    class="mb-4 text-balance text-4xl font-extrabold tracking-tight text-neutral-700 dark:text-neutral-200"
                >
                    Código no encontrado
                </h4>
                <!-- Section subtitle -->
                <p
                    class="mb-8 max-w-prose text-pretty font-light text-neutral-600 dark:text-neutral-400 sm:text-xl"
                >
                    Este código se no encuentra registrado en nuestra base de
                    datos.
                </p>
                <div class="grid w-full justify-center gap-3 sm:inline-flex">
                    <PrimaryCTA title="Contactar con soporte" url="/contact" />
                    <SecondaryCTA title="Ir al inicio" url="/" />
                </div>
            </div>
        </section>
    </div>
</MainLayout>
<script>
    import DOMPurify from "dompurify";
    import coursesDiplomas from "@data/codes-certificates/courses-diplomas.json";
    import { log } from "node_modules/astro/dist/core/logger/core";

    const formSearch = document.querySelector("#form-search");
    const inputSerach = document.querySelector(
        "#search-code",
    ) as HTMLInputElement;
    const notFoundSection = document.querySelector("#not-found");
    const codeSuccessSection = document.querySelector("#code-success");
    const errorLabel = document.querySelector("#error-label");

    const isInvalidFormat = (searchCodeValue) => {
        const regex = /^[a-zA-Z0-9]{3}-[a-zA-Z0-9]$/;

        if (!regex.test(searchCodeValue)) {
            errorLabel.innerHTML =
                "El código que ingresó no cumple con el formato solicitado. Rectifique e intente nuevamente.";
            return true;
        }
        errorLabel.innerHTML = "";
        return false;
    };

    const getQueryParams = (search) => {
        return new URLSearchParams({ search }).toString();
    };

    const findCode = async (searchCodeValue) => {

        const url = `./api/codes-certificates/get-codes-normal.json?${getQueryParams(searchCodeValue)}`;

        try {
            const request = await fetch(url, {
                method: "get",
                headers: {
                    "Content-Type": "application/json",
                    Accept: "application/json",
                },
            });

            // 3. Check for errors in the request
            if (!request.ok) {
                throw new Error(`HTTP error! status: ${request.status}`);
            }

            // 4. Parse JSON response (assuming successful fetch)
            const response = await request.json();

            // 5. Check if the response data has codes (length > 0)
            if(response.data.length > 0) {
                console.log(response.data[0].Certificate.name);
                return response.data[0].Certificate.name;
            }

            return false

        } catch (error) {
            // 6. Handle errors
            console.error("Error fetching codes:", error);
            return false; // Or throw the error for further handling
        }
    };

    const setCodeNotFound = (searchCodeValue) => {
        notFoundSection.classList.remove(...["hidden"]);
        codeSuccessSection.classList.add(...["opacity-0", "hidden"]);

        setTimeout(() => {
            notFoundSection.classList.remove(...["opacity-0"]);
            notFoundSection.classList.add("opacity-100");
        }, 100);

        notFoundSection.querySelector("#code").innerHTML = searchCodeValue;
    };

    const setCodeSuccess = (searchCodeValue, certificateFound) => {
        codeSuccessSection.classList.remove(...["hidden"]);
        notFoundSection.classList.add(...["opacity-0", "hidden"]);

        setTimeout(() => {
            codeSuccessSection.classList.remove(...["opacity-0"]);
            codeSuccessSection.classList.add("opacity-100");
        }, 100);

        codeSuccessSection.querySelector("#code").innerHTML = searchCodeValue;
        codeSuccessSection.querySelector("#course").innerHTML = certificateFound;
    };

    formSearch.addEventListener("submit", async (e) => {
        e.preventDefault();
        const searchCodeValue = DOMPurify.sanitize(inputSerach.value);
        inputSerach.value = "";

        if (isInvalidFormat(searchCodeValue)) {
            return;
        }

        const certificateFound = await findCode(searchCodeValue);

        if (!certificateFound) {
            setCodeNotFound(searchCodeValue);
        } else {
            setCodeSuccess(searchCodeValue, certificateFound);
        }
    });

   
</script>
